# Install LAMP server with laravel
---
- hosts: all
  user: "{{ login_user }}"

  become: yes
  become_method: sudo

  vars_files:
    - config.yml

  tasks:

   - name: Test connection
     ping:

   - name: Add {{ site_fqdn }} entry to /etc/hosts (for wkhtmltopdf to work)
     shell: echo "127.0.1.1 {{ site_fqdn }}" >> /etc/hosts

   - name: Remove php5
     shell: apt-get remove php5* -y

   - name: Update apt database
     apt: update_cache=yes

   - name: Install required software
     apt: name={{ item }} state=present
     with_items:
      - apache2
      - libapache2-mpm-itk
      - software-properties-common
      - python-mysqldb
      - git
      - curl
      - ghostscript
      - unoconv

   - name: Install packages specific for Ubuntu =< 16.04
     apt: name={{ item }} state=present
     when: ansible_distribution_major_version|int < 18
     with_items:
      - python-software-properties

   - name: Install php repository
     shell: add-apt-repository ppa:ondrej/php

   - name: Download mysql repository configuration package
     shell: wget --no-check-certificate http://dev.mysql.com/get/mysql-apt-config_0.8.7-1_all.deb
     args:
       chdir: /tmp/
       creates: mysql-apt-config_0.8.7-1_all.deb
     
   - name: Install mysql repository
     shell: DEBIAN_FRONTEND=noninteractive MYSQL_SERVER_VERSION="mysql-5.7" dpkg -i mysql-apt-config_0.8.7-1_all.deb
     args:
       chdir: /tmp/

   - name: Update apt database
     apt: update_cache=yes

   - name: Install php7 and mysql-5.7
     apt: name={{ item }} state=present force=yes
     with_items:
      - php{{ php_version }}
      - php{{ php_version }}-fpm
      - php{{ php_version }}-cli 
      - php{{ php_version }}-common 
      - php{{ php_version }}-mysql 
      - php{{ php_version }}-curl 
      - php{{ php_version }}-gd 
      - php{{ php_version }}-cgi 
      - php{{ php_version }}-phpdbg 
      - php{{ php_version }}-fpm 
      - libphp{{ php_version }}-embed 
      - php{{ php_version }}-enchant 
      - php{{ php_version }}-gmp 
      - php{{ php_version }}-imap 
      - php{{ php_version }}-interbase 
      - php{{ php_version }}-intl 
      - php{{ php_version }}-ldap 
      - php{{ php_version }}-mcrypt 
      - php{{ php_version }}-readline 
      - php{{ php_version }}-odbc 
      - php{{ php_version }}-pgsql 
      - php{{ php_version }}-pspell 
      - php{{ php_version }}-recode 
      - php{{ php_version }}-snmp  
      - php{{ php_version }}-tidy 
      - php{{ php_version }}-xmlrpc 
      - php{{ php_version }}-xsl 
      - php{{ php_version }}-json 
      - php{{ php_version }}-sybase 
      - php{{ php_version }}-sqlite3 
      - php{{ php_version }}-opcache 
      - php{{ php_version }}-bz2
      - php{{ php_version }}-mbstring 
      - php{{ php_version }}-zip 
      - libapache2-mod-php{{ php_version }}
      - mysql-server
      - openssl
      - libxrender1
      - ca-certificates

   - name: Update mysqld configuration
     copy: src=files/mysqld_mindwo.cnf dest=/etc/mysql/mysql.conf.d/mysqld_mindwo.cnf

   - name: Service mysql restarted
     service: name=mysql state=restarted
     
   - name: Make pdf export working (Ubuntu 14.04)
     apt: name={{ item }} state=present
     when: ansible_distribution_major_version|int == 14
     with_items:
      - libssl-dev=1.0.1f-1ubuntu2.25

   - name: Make pdf export working (Ubuntu 16.04)
     apt: name={{ item }} state=present
     when: ansible_distribution_major_version|int == 16
     with_items:
      - libssl-dev=1.0.2g-1ubuntu4.12

   - name: Make pdf export working (Ubuntu 18.04)
     apt: name={{ item }} state=present
     when: ansible_distribution_major_version|int == 18
     with_items:
      - libssl1.0-dev

   - name: Hold proper version of libssl-dev (Ubuntu 14.04 & 16.04)
     shell: apt-mark hold libssl-dev
     when: ansible_distribution_major_version|int < 18

   - name: Hold proper version of libssl-dev (Ubuntu 18.04)
     shell: apt-mark hold libssl1.0-dev
     when: ansible_distribution_major_version|int > 16

   - name: Apache module enable
     apache2_module: state=present name={{ item }}
     with_items:
      - rewrite
      - alias
      - auth_basic
      - authn_file
      - authz_groupfile
      - authz_host
      - authz_user
      - autoindex
      - cgi
      - deflate
      - dir
      - env
      - expires
      - headers
      - mime
      - negotiation
      - reqtimeout
      - setenvif
      - status
      - mpm_itk

   - name: ensure anonymous users are not in the database
     mysql_user: name='' host=$item state=absent
     with_items:
      - localhost
      - $inventory_hostname

   - name: remove the test database
     mysql_db: name=test state=absent

   - name: Disable exec functions for mod_php (but not for cli)
     copy: src=files/00-disable_exec.ini dest=/etc/php/{{ php_version }}/apache2/conf.d/00-disable_exec.ini
     
   - name: Install composer
     shell: curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer

   - name: Set phpmyadmin (with root privs)  user password
     mysql_user: name=phpmyadmin
              password="{{ mysql_phpmyadmin_password }}"
              check_implicit_admin=yes
              login_user="root"
              state=present
              host=localhost
              priv=*.*:ALL,GRANT

   - name: Create phpmyadmin dir
     file: path=/usr/share/phpmyadmin state=directory

   - name: Download the latest stable release of phpmyadmin
     get_url:
       url: https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.xz
       dest: /tmp/phpmyadmin.tar.xz
       validate_certs: no

   - name: Unpack phpmyadmin
     unarchive:
       src: /tmp/phpmyadmin.tar.xz
       dest: /usr/share/phpmyadmin
       remote_src: yes
       extra_opts: [ --strip-components=1 ]

   - name: Install config file for phpmyadmin
     template: src=config.inc.php dest=/usr/share/phpmyadmin

   - name: Copy apache default for phpmyadmin
     copy: src=files/000-default.conf dest=/etc/apache2/sites-available/000-default.conf

   - name: Service apache restarted
     service: name=apache2 state=restarted
